---
import { Image } from '@astrojs/image/components';
import { importImage } from 'src/lib/importImage';

export interface Props {
	gallery: {
		title: string;
		thumbnail: string;
		alt: string;
	}[];
}

const { gallery } = Astro.props as Props;
---

<script>
	function updateImage(
		images: NodeListOf<Element>,
		prev: number,
		next: number
	) {
		addClass(images, next);
		removeClass(images, prev);

		prev = next;

		if (++next >= images.length) next = 0;

		setTimeout(() => updateImage(images, prev, next), 5000);
	}

	function addClass(images: NodeListOf<Element>, index: number) {
		images[index]?.classList.add('visible');
	}

	function removeClass(images: NodeListOf<Element>, index: number) {
		images[index]?.classList.remove('visible');
	}

	window.addEventListener('load', () => {
		const images = document.querySelectorAll('.gallery > img');
		setTimeout(() => updateImage(images, 0, 1), 5000);
		images.forEach((img) => img.classList.remove('hidden'));
	});
</script>

<div class="gallery">
	{
		gallery.map(({ thumbnail, alt }, index) => (
			<Image
				src={importImage(thumbnail)}
				alt={alt}
				loading={index === 0 ? 'eager' : 'lazy'}
				width={1000}
				aspectRatio="1:1"
				class={index === 0 ? 'visible' : ''}
				format="webp"
				hidden={index !== 0}
			/>
		))
	}
</div>

<style>
	.gallery {
		position: relative;
		height: 100%;
		width: 100%;
		z-index: -1;
	}

	img {
		display: block;
		position: absolute;
		height: 100%;
		width: 100%;
		object-fit: cover;
		object-position: center;

		opacity: 0;
		transition: opacity 400ms;

		&.visible {
			opacity: 1;
		}

		&[hidden] {
			display: block;
			&.hidden {
				display: none;
			}
		}
	}
</style>
