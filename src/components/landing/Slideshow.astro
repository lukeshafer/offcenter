---
import { getImage } from '@astrojs/image';
import { importImage } from 'src/lib/importImage';

export interface Props {
	gallery: {
		title: string;
		thumbnail: string;
		alt: string;
	}[];
}

const { gallery } = Astro.props as Props;
const galleryData = await Promise.all(
	gallery.map(async ({ thumbnail, alt }) => {
		const data = await getImage({
			src: importImage(thumbnail),
			width: 1100,
			aspectRatio: '1:1',
			format: 'webp',
		});
		return { ...data, alt };
	})
);

const smallImg = await getImage({
	src: importImage(gallery[0]!.thumbnail),
	width: 800,
	aspectRatio: '1:1',
	format: 'webp',
});
---

<script>
	function updateImage(
		images: NodeListOf<Element>,
		prev: number,
		next: number
	) {
		addClass(images, next);
		removeClass(images, prev);

		prev = next;

		if (++next >= images.length) next = 0;

		if (checkMotion.matches) {
			setTimeout(() => updateImage(images, prev, next), 5000);
		}
	}

	function addClass(images: NodeListOf<Element>, index: number) {
		images[index]?.classList.add('visible');
	}

	function removeClass(images: NodeListOf<Element>, index: number) {
		images[index]?.classList.remove('visible');
	}

	const checkMotion = window.matchMedia(
		'(prefers-reduced-motion: no-preference)'
	);

	window.addEventListener('load', () => {
		const images = document.querySelectorAll(
			'.gallery > img'
		) as NodeListOf<HTMLImageElement>;

		images.forEach((img) => {
			const src = img.getAttribute('data-src');
			if (src) img.setAttribute('src', src);
		});

		if (checkMotion.matches) {
			setTimeout(() => updateImage(images, 0, 1), 5000);
			images.forEach((img) => img.classList.remove('hidden'));
		}
	});
</script>

<div class="gallery">
	{
		galleryData.map(({ width, height, src, alt }, index) => (
			<img
				src={index === 0 ? smallImg.src : undefined}
				data-src={src}
				width={width}
				height={height}
				alt={alt}
				class={index === 0 ? 'visible' : ''}
				hidden={index !== 0}
				loading={index === 0 ? 'eager' : undefined}
			/>
		))
	}
</div>

<style>
	.gallery {
		position: relative;
		height: 100%;
		width: 100%;
		z-index: -1;
	}

	img {
		display: block;
		position: absolute;
		height: 100%;
		width: 100%;
		object-fit: cover;
		object-position: center;

		opacity: 0;
		transition: opacity 400ms;

		&.visible {
			opacity: 1;
		}

		&[hidden] {
			display: block;
			&.hidden {
				display: none;
			}
		}
	}
</style>
